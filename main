#include "stdio.h"
#include <stdlib.h>
#include <time.h>
#include "conio.h"
#include <windows.h>
int n=3;
int num=71;
struct Snake
{
	int x;
	int y;
	int dir;
}Snake[100]={{2,40,100},{2,38,100},{2,36,100}};
struct Food
{
	int x;
	int y;
}Food;
void gotoxy(int x, int y)
{
	COORD coord;
	coord.X = y;
	coord.Y = x;
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord);
}
void HideCursor()
{
	CONSOLE_CURSOR_INFO cursor_info = {1, 0}; 
	SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &cursor_info);
}
void start()
{
	printf("1.Start\n");
	printf("2.Help\n");
	printf("3.Exit\n");
}
void reset()
{
	n=3;
	Snake[0].x=2;
	Snake[0].y=40;
	Snake[0].dir=100;
	Snake[1].x=2;
	Snake[1].y=40;
	Snake[1].dir=100;
	Snake[2].x=2;
	Snake[2].y=40;
	Snake[2].dir=100;
}
void walk()
{
	int i;
	gotoxy(Snake[n-1].x,Snake[n-1].y);
	printf(" ");
	for (i = n-1; i > 0; i--)
	{
		Snake[i].x=Snake[i-1].x;
		Snake[i].y=Snake[i-1].y;
		Snake[i].dir=Snake[i-1].dir;
	}
	switch(Snake[0].dir)
	{
		case 115: 
		Snake[0].x+=1;
		break; 
		case 119:
		Snake[0].x-=1;
		break;
		case 100:
		Snake[0].y+=2;
		break;
		case 97:
		Snake[0].y-=2;
		break;	
	}
}
void changedir()
{
	int ch;
	if (kbhit())
	{
		int ch =getch();
		switch(ch)
		{
			case 115: 
			if (Snake[0].dir!=119)
			{
				Snake[0].dir=ch;
			}
			break; 
			case 119:
			if (Snake[0].dir!=115)
			{
				Snake[0].dir=ch;
			}
			break;
			case 100:
			if (Snake[0].dir!=97)
			{
				Snake[0].dir=ch;
			}
			break;
			case 97:
			if (Snake[0].dir!=100)
			{
				Snake[0].dir=ch;
			}
			break;	
		}
	}
}
void food()
{
	int i,a=0;
	srand((unsigned)time( NULL ) );
	Food.y=2*(rand() % ((num-2)/2))+2;
	Food.x=rand() % (num/3-2)+1;
	for (i = 0; i < n; i++)
	{
		if (Food.x==Snake[i].x && Food.y==Snake[i].y)
		{
			a=1;
		}
	}
	if (a==1)
	{
		food();
	}
	gotoxy(Food.x,Food.y);
	printf("★");
}
void eat()
{
	if (Snake[0].x==Food.x && Snake[0].y==Food.y)
	{
		Snake[n].x=Snake[n-1].x;
		Snake[n].y=Snake[n-1].y;
		walk();
		n++;
		food();
	}
}
int death()
{
	int i;
	if (Snake[0].x==0 || Snake[0].x==num/3-1 || Snake[0].y==0 || Snake[0].y==num-1)
	{
		system("cls");
		gotoxy(num/8,num/2);
		printf("You lose!\n");
		gotoxy(num/8+1,num/2);
		printf("Press any key to continue\n");
		getch();
		system("cls");
		start();
		reset();
		return 0;
	}
	for (i = 1; i < n; i++)
	{
		if (Snake[0].x==Snake[i].x && Snake[0].y==Snake[i].y)
		{
			system("cls");
			gotoxy(num/8,num/2);
			printf("You lose!\n");
			gotoxy(num/8+1,num/2);
			printf("Press any key to continue\n");
			getch();
			system("cls");
			start();
			reset();
			return 0;
		}
	}
	return 1;
}
void drawmap()
{
	int i,j; 
	for( i = 0; i < num/3; i+=num/3-1)
	{
		for ( j = 0; j < num; j+=2)
		{
			gotoxy(i,j);
			printf("■");
		}
	}
	for (j = 0; j < num; j+=num-1)
	{
		for (i = 0; i < num/3; i++)
		{
			gotoxy(i,j);
			printf("■");
		}
	}
}
void drawsnake()
{
	int i;
	for (i = 0; i < n; i++)
	{
		gotoxy(Snake[i].x,Snake[i].y);
		printf("●");
	}
}
void snake1()
{
	int i,j,k; 
	food();
	while(j)
	{
		drawsnake();
		changedir();
		walk();
		j=death();
		eat();
		for(i=0;i<100000000;i++);
	}
}
int main()
{
	int i;
	int ch;
	HideCursor(); 
	start();
	while(1)
	{
		scanf("%d",&i);
		switch(i)
		{
			case 1: 
			system("cls");
			drawmap();
			snake1();
			break; 
			case 2:
			system("cls");
			printf("Use WASD to move\n");
			printf("Press Esc to return menu\n");
			ch = getch();
			if (ch==27)
			{
				system("cls");
				start();
				reset();
			}
			break;
			case 3:
			return;	
		}
	}

	return 0;
}
